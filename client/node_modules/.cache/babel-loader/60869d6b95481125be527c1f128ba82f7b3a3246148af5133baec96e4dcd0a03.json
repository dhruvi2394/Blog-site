{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\Blog Site\\\\client\\\\src\\\\pages\\\\IndexPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport Post from \"../Post\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PostListByAuthor({\n  author\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedAuthor, setSelectedAuthor] = useState('');\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/users').then(response => {\n      response.json().then(users => {\n        setUsers(users);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedAuthor) {\n      // Fetch posts by the selected author\n      fetch(`http://localhost:4000/posts/users/${selectedAuthor}`).then(response => {\n        response.json().then(posts => {\n          setPosts(posts);\n        });\n      });\n    }\n  }, [selectedAuthor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedAuthor(e.target.value),\n      value: selectedAuthor,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user._id,\n        children: author.username\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PostListByAuthor, \"mO5CfpGGDHnwv2jri/SW5SJjXLw=\");\n_c = PostListByAuthor;\nexport default function IndexPage() {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/post').then(response => {\n      response.json().then(posts => {\n        setPosts(posts);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length > 0 && posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      ...post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s2(IndexPage, \"X6mjf/w2X26pG8PLb9LvJbnNlKY=\");\n_c2 = IndexPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostListByAuthor\");\n$RefreshReg$(_c2, \"IndexPage\");","map":{"version":3,"names":["Post","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PostListByAuthor","author","_s","users","setUsers","selectedAuthor","setSelectedAuthor","posts","setPosts","fetch","then","response","json","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_id","username","post","_c","IndexPage","_s2","length","_c2","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/Blog Site/client/src/pages/IndexPage.js"],"sourcesContent":["import Post from \"../Post\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport function PostListByAuthor({author}) {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedAuthor, setSelectedAuthor] = useState('');\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/users').then(response => {\r\n      response.json().then(users => {\r\n        setUsers(users);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedAuthor) {\r\n      // Fetch posts by the selected author\r\n      fetch(`http://localhost:4000/posts/users/${selectedAuthor}`).then(response => {\r\n         response.json().then(posts => {\r\n          setPosts(posts);\r\n         });\r\n    });\r\n  }\r\n  }, [selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={e => setSelectedAuthor(e.target.value)} value={selectedAuthor}>\r\n        <option value=\"\">Select an author</option>\r\n        {users.map(user => (\r\n          <option key={user._id} value={user._id}>{author.username}</option>\r\n        ))}\r\n      </select>\r\n      \r\n      <div>\r\n        {posts.map(post => (\r\n          <Post key={post._id} {...post} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function IndexPage() {\r\n  const [posts,setPosts] = useState([]);\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/post').then(response => {\r\n      response.json().then(posts => {\r\n        setPosts(posts);\r\n      });\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {posts.length > 0 && posts.map(post => (\r\n        <Post {...post} />\r\n      ))}\r\n    </>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,OAAO,SAASC,gBAAgBA,CAAC;EAACC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACpDA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACP,KAAK,IAAI;QAC5BC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACd,IAAIW,cAAc,EAAE;MAClB;MACAI,KAAK,CAAC,qCAAqCJ,cAAc,EAAE,CAAC,CAACK,IAAI,CAACC,QAAQ,IAAI;QAC3EA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACH,KAAK,IAAI;UAC7BC,QAAQ,CAACD,KAAK,CAAC;QAChB,CAAC,CAAC;MACP,CAAC,CAAC;IACJ;EACA,CAAC,EAAE,CAACF,cAAc,CAAC,CAAC;EAEpB,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAQiB,QAAQ,EAAEC,CAAC,IAAIT,iBAAiB,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEZ,cAAe;MAAAQ,QAAA,gBAC9EhB,OAAA;QAAQoB,KAAK,EAAC,EAAE;QAAAJ,QAAA,EAAC;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzClB,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACb1B,OAAA;QAAuBoB,KAAK,EAAEM,IAAI,CAACC,GAAI;QAAAX,QAAA,EAAEZ,MAAM,CAACwB;MAAQ,GAA3CF,IAAI,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETxB,OAAA;MAAAgB,QAAA,EACGN,KAAK,CAACe,GAAG,CAACI,IAAI,iBACb7B,OAAA,CAACJ,IAAI;QAAA,GAAoBiC;MAAI,GAAlBA,IAAI,CAACF,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAxCeF,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AA4ChC,eAAe,SAAS4B,SAASA,CAAA,EAAG;EAAAC,GAAA;EAClC,MAAM,CAACtB,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACrCD,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACnDA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACH,KAAK,IAAI;QAC5BC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACEV,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACGN,KAAK,CAACuB,MAAM,GAAG,CAAC,IAAIvB,KAAK,CAACe,GAAG,CAACI,IAAI,iBACjC7B,OAAA,CAACJ,IAAI;MAAA,GAAKiC;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClB;EAAC,gBACF,CAAC;AAEP;AAACQ,GAAA,CAhBuBD,SAAS;AAAAG,GAAA,GAATH,SAAS;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
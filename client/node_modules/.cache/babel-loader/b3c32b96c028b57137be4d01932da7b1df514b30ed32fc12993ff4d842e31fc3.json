{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\Blog Site\\\\client\\\\src\\\\dropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostListByAuthor({\n  author\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedAuthor, setSelectedAuthor] = useState('');\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4000/users').then(response => {\n      response.json().then(users => {\n        setUsers(users);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedAuthor) {\n      // Fetch posts by the selected author\n      fetch(`http://localhost:4000/posts/users/${selectedAuthor}`).then(response => {\n        response.json().then(posts => {\n          setPosts(posts);\n        });\n      });\n    }\n  }, [selectedAuthor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedAuthor(e.target.value),\n      value: selectedAuthor,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user._id,\n        children: author.username\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PostListByAuthor, \"mO5CfpGGDHnwv2jri/SW5SJjXLw=\");\n_c = PostListByAuthor;\nvar _c;\n$RefreshReg$(_c, \"PostListByAuthor\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","PostListByAuthor","author","_s","users","setUsers","selectedAuthor","setSelectedAuthor","posts","setPosts","fetch","then","response","json","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_id","username","post","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/Blog Site/client/src/dropdown.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\n\r\nexport default function PostListByAuthor({author}) {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedAuthor, setSelectedAuthor] = useState('');\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/users').then(response => {\r\n      response.json().then(users => {\r\n        setUsers(users);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedAuthor) {\r\n      // Fetch posts by the selected author\r\n      fetch(`http://localhost:4000/posts/users/${selectedAuthor}`).then(response => {\r\n         response.json().then(posts => {\r\n          setPosts(posts);\r\n         });\r\n    });\r\n  }\r\n  }, [selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={e => setSelectedAuthor(e.target.value)} value={selectedAuthor}>\r\n        <option value=\"\">Select an author</option>\r\n        {users.map(user => (\r\n          <option key={user._id} value={user._id}>{author.username}</option>\r\n        ))}\r\n      </select>\r\n      \r\n      <div>\r\n        {posts.map(post => (\r\n          <Post key={post._id} {...post} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,gBAAgBA,CAAC;EAACC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACpDA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACP,KAAK,IAAI;QAC5BC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACd,IAAIU,cAAc,EAAE;MAClB;MACAI,KAAK,CAAC,qCAAqCJ,cAAc,EAAE,CAAC,CAACK,IAAI,CAACC,QAAQ,IAAI;QAC3EA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACH,KAAK,IAAI;UAC7BC,QAAQ,CAACD,KAAK,CAAC;QAChB,CAAC,CAAC;MACP,CAAC,CAAC;IACJ;EACA,CAAC,EAAE,CAACF,cAAc,CAAC,CAAC;EAEpB,oBACEN,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAQe,QAAQ,EAAEC,CAAC,IAAIT,iBAAiB,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEZ,cAAe;MAAAQ,QAAA,gBAC9Ed,OAAA;QAAQkB,KAAK,EAAC,EAAE;QAAAJ,QAAA,EAAC;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzClB,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACbxB,OAAA;QAAuBkB,KAAK,EAAEM,IAAI,CAACC,GAAI;QAAAX,QAAA,EAAEZ,MAAM,CAACwB;MAAQ,GAA3CF,IAAI,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETtB,OAAA;MAAAc,QAAA,EACGN,KAAK,CAACe,GAAG,CAACI,IAAI,iBACb3B,OAAA,CAACF,IAAI;QAAA,GAAoB6B;MAAI,GAAlBA,IAAI,CAACF,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAxCuBF,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
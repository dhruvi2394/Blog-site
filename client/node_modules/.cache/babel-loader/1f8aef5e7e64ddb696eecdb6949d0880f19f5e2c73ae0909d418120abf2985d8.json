{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\Blog Site\\\\client\\\\src\\\\dropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostListByAuthor() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedAuthor, setSelectedAuthor] = useState('');\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Fetch all users\n    fetch(`http://localhost:4000/user`).then(response => setUsers(response.data)).catch(error => console.error('Error fetching users:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedAuthor) {\n      // Fetch posts by the selected author\n      fetch(`http://localhost:4000/posts /author/${selectedAuthor}`).then(response => setPosts(response.data)).catch(error => console.error('Error fetching posts:', error));\n    }\n  }, [selectedAuthor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedAuthor(e.target.value),\n      value: selectedAuthor,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user._id,\n        children: user.username\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PostListByAuthor, \"mO5CfpGGDHnwv2jri/SW5SJjXLw=\");\n_c = PostListByAuthor;\nvar _c;\n$RefreshReg$(_c, \"PostListByAuthor\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","PostListByAuthor","_s","users","setUsers","selectedAuthor","setSelectedAuthor","posts","setPosts","fetch","then","response","data","catch","error","console","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","user","_id","username","post","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/Blog Site/client/src/dropdown.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\n\r\nexport default function PostListByAuthor() {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedAuthor, setSelectedAuthor] = useState('');\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch all users\r\n    fetch(`http://localhost:4000/user`)\r\n      .then(response => setUsers(response.data))\r\n      .catch(error => console.error('Error fetching users:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedAuthor) {\r\n      // Fetch posts by the selected author\r\n      fetch(`http://localhost:4000/posts /author/${selectedAuthor}`)\r\n        .then(response => setPosts(response.data))\r\n        .catch(error => console.error('Error fetching posts:', error));\r\n    }\r\n  }, [selectedAuthor]);\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={e => setSelectedAuthor(e.target.value)} value={selectedAuthor}>\r\n        <option value=\"\">Select an author</option>\r\n        {users.map(user => (\r\n          <option key={user._id} value={user._id}>{user.username}</option>\r\n        ))}\r\n      </select>\r\n      \r\n      <div>\r\n        {posts.map(post => (\r\n          <Post key={post._id} {...post} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAa,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIP,QAAQ,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC,CACzCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACd,IAAIS,cAAc,EAAE;MAClB;MACAI,KAAK,CAAC,uCAAuCJ,cAAc,EAAE,CAAC,CAC3DK,IAAI,CAACC,QAAQ,IAAIH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CACzCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IAClE;EACF,CAAC,EAAE,CAACT,cAAc,CAAC,CAAC;EAEpB,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAQiB,QAAQ,EAAEC,CAAC,IAAIZ,iBAAiB,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEf,cAAe;MAAAW,QAAA,gBAC9EhB,OAAA;QAAQoB,KAAK,EAAC,EAAE;QAAAJ,QAAA,EAAC;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzCrB,KAAK,CAACsB,GAAG,CAACC,IAAI,iBACb1B,OAAA;QAAuBoB,KAAK,EAAEM,IAAI,CAACC,GAAI;QAAAX,QAAA,EAAEU,IAAI,CAACE;MAAQ,GAAzCF,IAAI,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0C,CAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETxB,OAAA;MAAAgB,QAAA,EACGT,KAAK,CAACkB,GAAG,CAACI,IAAI,iBACb7B,OAAA,CAACF,IAAI;QAAA,GAAoB+B;MAAI,GAAlBA,IAAI,CAACF,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CArCuBD,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}